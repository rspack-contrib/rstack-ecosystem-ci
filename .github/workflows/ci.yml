name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  rsbuild:
    strategy:
      matrix:
        include:
          - suite: rslib
            os: ubuntu-latest
          - suite: rstest
            os: ubuntu-latest
          - suite: rspress
            os: ubuntu-latest
          - suite: plugins
            os: ubuntu-latest
          - suite: modernjs
            os: ubuntu-latest
          - suite: examples
            os: ubuntu-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: rsbuild (${{ matrix.suite }})
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/build-rsbuild
      - name: Install
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - run: >-
          pnpm tsx ecosystem-ci.ts
          run-suites
          --stack rsbuild
          ${{ matrix.suite }}

  rstest:
    strategy:
      matrix:
        include:
          - suite: rslib
            os: ubuntu-latest
          - suite: rsbuild
            os: ubuntu-latest
          - suite: rsdoctor
            os: ubuntu-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: rstest (${{ matrix.suite }})
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/build-rstest
      - name: Install
        run: |
          corepack enable
          pnpm install --frozen-lockfile --prefer-offline
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - run: >-
          pnpm tsx ecosystem-ci.ts
          run-suites
          --stack rstest
          ${{ matrix.suite }}

  get-runner-labels:
    name: Get Runner Labels
    uses: ./.github/workflows/get-runner-labels.yml

  prepare-rspack-binding:
    name: Prepare Rspack Binding
    needs: get-runner-labels
    runs-on: ${{ fromJSON(needs.get-runner-labels.outputs.LINUX_RUNNER_LABELS) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/prepare-rspack-binding

  rspack:
    needs:
      - get-runner-labels
      - prepare-rspack-binding
    strategy:
      matrix:
        include:
          - suite: modernjs
            os: ubuntu-22.04
          - suite: _selftest
            os: ubuntu-22.04
          # - suite: nx
          #   os: ubuntu-22.04
          - suite: rspress
            os: ubuntu-22.04
          - suite: rsbuild
            os: ubuntu-22.04
          - suite: examples
            os: ubuntu-22.04
          - suite: rslib
            os: ubuntu-22.04
          - suite: rstest
            os: ubuntu-22.04
          - suite: rsdoctor
            os: ubuntu-22.04
          - suite: devserver
            os: ubuntu-22.04
          - suite: nuxt
            os: ubuntu-22.04
          - suite: plugin
            os: ubuntu-22.04
          - suite: lynx-stack
            os: ubuntu-22.04
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: rspack (${{ matrix.suite }})
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-rspack
      - name: Install
        run: pnpm install --frozen-lockfile --prefer-offline
      - name: Format
        if: matrix.suite == '_selftest'
        run: pnpm format
      - name: Lint
        if: matrix.suite == '_selftest'
        run: pnpm lint
      - name: Setup Node.js
        if: matrix.suite == 'lynx-stack' || matrix.suite == '_selftest'
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Setup Rust
        if: matrix.suite == 'lynx-stack'
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - run: >-
          pnpm tsx ecosystem-ci.ts
          run-suites
          --stack rspack
          ${{ matrix.suite }}
